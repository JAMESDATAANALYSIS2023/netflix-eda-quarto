{
  "hash": "913d241a3c9ead546aef27aaeb3afc10",
  "result": {
    "markdown": "---\ntitle: \"Python Projects\"\nformat: html\nexecute: \n  \n  kernel: python3\n  engine: jupyter\n---\n\nlibrara\n\n\n```{r}\nlibrary(reticulate)\n\n# Replace this with your actual Python path if it's different\nuse_python(\"C:/Users/jgpet/AppData/Local/Programs/Python/Python312/python.exe\", required = TRUE)\n```\n\n\n\n\nProject: Customer Insights Using COIL 2000 & Bank Marketing Data\n\n\"Unlocking Business Value through Predictive Analytics\"\n\nIn todayâ€™s data-driven economy, financial and insurance companies must harness the power of analytics to understand customer behavior, enhance retention, and optimize marketing strategies. This project applies supervised machine learning and clustering techniques to two real-world datasets using Python and its rich ecosystem of libraries.\n\nðŸ§° Tools & Libraries\n\nThe analysis leverages the following Python libraries:\n\n* pandas for data manipulation and preprocessing\n\n* numpy for numerical operations\n\n* matplotlib and seaborn for visualizations\n\n* scikit-learn for classification models and clustering (e.g., KMeans)\n\n* plotly for interactive visuals\n\n* imbalanced-learn for handling class imbalance (if applicable)\n\nBank Marketing Dataset\n\nSource: UCI Machine Learning Repository\n\nDescription: Collected from a Portuguese banking institution, this dataset records results of a direct marketing campaign aimed at promoting term deposits. It includes features like age, job, marital status, previous contact outcomes, and a target variable indicating subscription.\n\nðŸŽ¯ Project Objectives\n\n* Predict customer responses to marketing campaigns\n\n* Identify high-value segments using clustering algorithms\n\n* Reduce customer churn through classification models\n\n* Visualize trends and feature relationships through interactive dashboards\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# This code imports the os as a module to interact with the operating system\nimport os\n\n# To display the current working directory to identity where Python is excecuting the scripts.\nprint(\"Current working directory:\", os.getcwd())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCurrent working directory: C:\\Users\\jgpet\\OneDrive\\Desktop\\DATA ANALYST\\Data Analytic Portfolio\\Lets make Musicupdated\\Featured projects\n```\n:::\n:::\n\n\nfff\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nfrom ucimlrepo import fetch_ucirepo \n  \n# fetch dataset \nbank_marketing = fetch_ucirepo(id=222) \n  \n# data (as pandas dataframes) \nX = bank_marketing.data.features \ny = bank_marketing.data.targets \n  \n# metadata \nprint(bank_marketing.metadata) \n  \n# variable information \nprint(bank_marketing.variables) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{'uci_id': 222, 'name': 'Bank Marketing', 'repository_url': 'https://archive.ics.uci.edu/dataset/222/bank+marketing', 'data_url': 'https://archive.ics.uci.edu/static/public/222/data.csv', 'abstract': 'The data is related with direct marketing campaigns (phone calls) of a Portuguese banking institution. The classification goal is to predict if the client will subscribe a term deposit (variable y).', 'area': 'Business', 'tasks': ['Classification'], 'characteristics': ['Multivariate'], 'num_instances': 45211, 'num_features': 16, 'feature_types': ['Categorical', 'Integer'], 'demographics': ['Age', 'Occupation', 'Marital Status', 'Education Level'], 'target_col': ['y'], 'index_col': None, 'has_missing_values': 'yes', 'missing_values_symbol': 'NaN', 'year_of_dataset_creation': 2014, 'last_updated': 'Fri Aug 18 2023', 'dataset_doi': '10.24432/C5K306', 'creators': ['S. Moro', 'P. Rita', 'P. Cortez'], 'intro_paper': {'ID': 277, 'type': 'NATIVE', 'title': 'A data-driven approach to predict the success of bank telemarketing', 'authors': 'SÃ©rgio Moro, P. Cortez, P. Rita', 'venue': 'Decision Support Systems', 'year': 2014, 'journal': None, 'DOI': '10.1016/j.dss.2014.03.001', 'URL': 'https://www.semanticscholar.org/paper/cab86052882d126d43f72108c6cb41b295cc8a9e', 'sha': None, 'corpus': None, 'arxiv': None, 'mag': None, 'acl': None, 'pmid': None, 'pmcid': None}, 'additional_info': {'summary': \"The data is related with direct marketing campaigns of a Portuguese banking institution. The marketing campaigns were based on phone calls. Often, more than one contact to the same client was required, in order to access if the product (bank term deposit) would be ('yes') or not ('no') subscribed. \\n\\nThere are four datasets: \\n1) bank-additional-full.csv with all examples (41188) and 20 inputs, ordered by date (from May 2008 to November 2010), very close to the data analyzed in [Moro et al., 2014]\\n2) bank-additional.csv with 10% of the examples (4119), randomly selected from 1), and 20 inputs.\\n3) bank-full.csv with all examples and 17 inputs, ordered by date (older version of this dataset with less inputs). \\n4) bank.csv with 10% of the examples and 17 inputs, randomly selected from 3 (older version of this dataset with less inputs). \\nThe smallest datasets are provided to test more computationally demanding machine learning algorithms (e.g., SVM). \\n\\nThe classification goal is to predict if the client will subscribe (yes/no) a term deposit (variable y).\", 'purpose': None, 'funded_by': None, 'instances_represent': None, 'recommended_data_splits': None, 'sensitive_data': None, 'preprocessing_description': None, 'variable_info': 'Input variables:\\n   # bank client data:\\n   1 - age (numeric)\\n   2 - job : type of job (categorical: \"admin.\",\"unknown\",\"unemployed\",\"management\",\"housemaid\",\"entrepreneur\",\"student\",\\n                                       \"blue-collar\",\"self-employed\",\"retired\",\"technician\",\"services\") \\n   3 - marital : marital status (categorical: \"married\",\"divorced\",\"single\"; note: \"divorced\" means divorced or widowed)\\n   4 - education (categorical: \"unknown\",\"secondary\",\"primary\",\"tertiary\")\\n   5 - default: has credit in default? (binary: \"yes\",\"no\")\\n   6 - balance: average yearly balance, in euros (numeric) \\n   7 - housing: has housing loan? (binary: \"yes\",\"no\")\\n   8 - loan: has personal loan? (binary: \"yes\",\"no\")\\n   # related with the last contact of the current campaign:\\n   9 - contact: contact communication type (categorical: \"unknown\",\"telephone\",\"cellular\") \\n  10 - day: last contact day of the month (numeric)\\n  11 - month: last contact month of year (categorical: \"jan\", \"feb\", \"mar\", ..., \"nov\", \"dec\")\\n  12 - duration: last contact duration, in seconds (numeric)\\n   # other attributes:\\n  13 - campaign: number of contacts performed during this campaign and for this client (numeric, includes last contact)\\n  14 - pdays: number of days that passed by after the client was last contacted from a previous campaign (numeric, -1 means client was not previously contacted)\\n  15 - previous: number of contacts performed before this campaign and for this client (numeric)\\n  16 - poutcome: outcome of the previous marketing campaign (categorical: \"unknown\",\"other\",\"failure\",\"success\")\\n\\n  Output variable (desired target):\\n  17 - y - has the client subscribed a term deposit? (binary: \"yes\",\"no\")\\n', 'citation': None}}\n           name     role         type      demographic  \\\n0           age  Feature      Integer              Age   \n1           job  Feature  Categorical       Occupation   \n2       marital  Feature  Categorical   Marital Status   \n3     education  Feature  Categorical  Education Level   \n4       default  Feature       Binary             None   \n5       balance  Feature      Integer             None   \n6       housing  Feature       Binary             None   \n7          loan  Feature       Binary             None   \n8       contact  Feature  Categorical             None   \n9   day_of_week  Feature         Date             None   \n10        month  Feature         Date             None   \n11     duration  Feature      Integer             None   \n12     campaign  Feature      Integer             None   \n13        pdays  Feature      Integer             None   \n14     previous  Feature      Integer             None   \n15     poutcome  Feature  Categorical             None   \n16            y   Target       Binary             None   \n\n                                          description  units missing_values  \n0                                                None   None             no  \n1   type of job (categorical: 'admin.','blue-colla...   None             no  \n2   marital status (categorical: 'divorced','marri...   None             no  \n3   (categorical: 'basic.4y','basic.6y','basic.9y'...   None             no  \n4                              has credit in default?   None             no  \n5                              average yearly balance  euros             no  \n6                                   has housing loan?   None             no  \n7                                  has personal loan?   None             no  \n8   contact communication type (categorical: 'cell...   None            yes  \n9                        last contact day of the week   None             no  \n10  last contact month of year (categorical: 'jan'...   None             no  \n11   last contact duration, in seconds (numeric). ...   None             no  \n12  number of contacts performed during this campa...   None             no  \n13  number of days that passed by after the client...   None            yes  \n14  number of contacts performed before this campa...   None             no  \n15  outcome of the previous marketing campaign (ca...   None            yes  \n16          has the client subscribed a term deposit?   None             no  \n```\n:::\n:::\n\n\nNow that the working directory is set to the correct location we can load the files for processing.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\n\ndf = pd.read_csv(\"bank-full.csv\")\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age;\"job\";\"marital\";\"education\";\"default\";\"balance\";\"housing\";\"loan\";\"contact\";\"day\";\"month\";\"duration\";\"campaign\";\"pdays\";\"previous\";\"poutcome\";\"y\"</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>58;\"management\";\"married\";\"tertiary\";\"no\";2143...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>44;\"technician\";\"single\";\"secondary\";\"no\";29;\"...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>33;\"entrepreneur\";\"married\";\"secondary\";\"no\";2...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>47;\"blue-collar\";\"married\";\"unknown\";\"no\";1506...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>33;\"unknown\";\"single\";\"unknown\";\"no\";1;\"no\";\"n...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\ndddd\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age;\"job\";\"marital\";\"education\";\"default\";\"balance\";\"housing\";\"loan\";\"contact\";\"day\";\"month\";\"duration\";\"campaign\";\"pdays\";\"previous\";\"poutcome\";\"y\"</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>58;\"management\";\"married\";\"tertiary\";\"no\";2143...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>44;\"technician\";\"single\";\"secondary\";\"no\";29;\"...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>33;\"entrepreneur\";\"married\";\"secondary\";\"no\";2...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>47;\"blue-collar\";\"married\";\"unknown\";\"no\";1506...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>33;\"unknown\";\"single\";\"unknown\";\"no\";1;\"no\";\"n...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>51;\"technician\";\"married\";\"tertiary\";\"no\";825;...</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>71;\"retired\";\"divorced\";\"primary\";\"no\";1729;\"n...</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>72;\"retired\";\"married\";\"secondary\";\"no\";5715;\"...</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>57;\"blue-collar\";\"married\";\"secondary\";\"no\";66...</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>37;\"entrepreneur\";\"married\";\"secondary\";\"no\";2...</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows Ã— 1 columns</p>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "python-projects_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}